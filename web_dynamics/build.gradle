apply plugin: 'war'
apply plugin: 'eclipse'
repositories {
    mavenCentral()
}

def tomcatHome = '/usr/local/disk1/files/apache-tomee-plus-1.7.1'
def libsDir= 'build/libs'

dependencies {
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
	compile group: 'org.elasticsearch', name: 'elasticsearch', version: '1.4.2'
}



task cleanTomcatDir(type:Exec){
	//println "stop tomcat first if running"
	
	workingDir '/usr/local/disk1/files/apache-tomee-plus-1.7.1/webapps'
	
	commandLine 'rm', '-rf', 'web_dynamics', 'web_dynamics.war'
	
	//store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()

  //extension method startTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }	
}

task copyWar() << {
    
    //println "Copy from ${libsDir.getPath()} into ${tomcatHome}/webapps"
    copy{
      from libsDir
      into "${tomcatHome}/webapps"
      include '*.war'
    }
}

task startTomcat(type:Exec) {
  workingDir '/usr/local/disk1/files/apache-tomee-plus-1.7.1/bin'

  
  //on linux
  commandLine 'pwd'
  commandLine './startup.sh'

  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()
  println "output" + standardOutput.toString();	
  //extension method startTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}

task deployWar(dependsOn: ['build', 'cleanTomcatDir' , 'copyWar', 'startTomcat'])
cleanTomcatDir.mustRunAfter build
copyWar.mustRunAfter cleanTomcatDir
startTomcat.mustRunAfter copyWar

task stopTomcat(type:Exec) {
  workingDir '/usr/local/disk1/files/apache-tomee-plus-1.7.1/bin'

  //on linux
  commandLine './shutdown.sh'

  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()

  //extension method stopTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}